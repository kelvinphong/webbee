{"hash":"0a850264ddd2e032d16b20f1cc6e21b8dbcfe9fd","fesm2020":{"code":"class GlobalHelper {\n    static isEmptyObject(obj) {\n        return !obj || (obj && (Object.keys(obj).length === 0));\n    }\n    static isEmpty(obj, key) {\n        return !obj || (obj && !obj.hasOwnProperty(key));\n    }\n    static set(obj, path, value) {\n        if (Object(obj) !== obj) {\n            return obj; // When obj is not an object\n        }\n        // If not yet an array, get the keys from the string-path\n        if (!Array.isArray(path)) {\n            path = path.toString().match(/[^.[\\]]+/g) || [];\n        }\n        path.slice(0, -1).reduce((a, c, i) => // Iterate all of them except the last one\n         Object(a[c]) === a[c] // Does the key exist and is its value an object?\n            // Yes: then follow that path\n            ? a[c]\n            // No: create the key. Is the next key a potential array-index?\n            : a[c] = Math.abs(path[i + 1]) >> 0 === +path[i + 1]\n                ? [] // Yes: assign a new array object\n                : {}, // No: assign a new plain object\n        obj)[path[path.length - 1]] = value; // Finally assign the value to the last key\n        return obj; // Return the top-level object to allow chaining\n    }\n    static get(object, keys, defaultVal) {\n        if (!object || object === null) {\n            return defaultVal;\n        }\n        keys = Array.isArray(keys) ? keys : keys.split('.');\n        object = object[keys[0]];\n        if (object && keys.length > 1) {\n            return this.get(object, keys.slice(1));\n        }\n        return object === undefined ? defaultVal : object;\n    }\n    static clone(object) {\n        return JSON.parse(JSON.stringify(object));\n    }\n    static empty(mixedVar) {\n        var undef;\n        var key;\n        var i;\n        var len;\n        var emptyValues = [undef, null, false, 0, '', '0'];\n        for (i = 0, len = emptyValues.length; i < len; i++) {\n            if (mixedVar === emptyValues[i]) {\n                return true;\n            }\n        }\n        if (typeof mixedVar === 'object') {\n            for (key in mixedVar) {\n                if (mixedVar.hasOwnProperty(key)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    static convertTimestampToDate(ts) {\n        const myDate = new Date(ts * 1000);\n        return new Date(Date.UTC(myDate.getFullYear(), myDate.getMonth(), myDate.getDate(), myDate.getHours(), myDate.getMinutes(), myDate.getSeconds()));\n    }\n    static convert2ClientDate(val) {\n        return typeof val === 'string' ? val : new Date(val * 1000);\n    }\n    static multiDimensionalUnique(arr, key) {\n        var uniques = [];\n        var itemsFound = {};\n        for (var i = 0, l = arr.length; i < l; i++) {\n            var stringified = arr[i][key];\n            if (itemsFound[stringified]) {\n                continue;\n            }\n            uniques.push(arr[i]);\n            itemsFound[stringified] = true;\n        }\n        return uniques;\n    }\n    static isInObject(value, key, object) {\n        let rs = false;\n        if (!this.empty(object)) {\n            for (let item of object) {\n                if (!this.empty(item[key]) && item[key] == value) {\n                    rs = true;\n                    break;\n                }\n            }\n        }\n        return rs;\n    }\n    static arrayPluck(array, path) {\n        var result = [];\n        if (!Array.isArray(array)) {\n            return result;\n        }\n        array.forEach(o => {\n            result.push(this.get(o, path));\n        });\n        return result;\n    }\n    static intersection(array1, array2) {\n        var result = [];\n        if (!Array.isArray(array1) || !Array.isArray(array2)) {\n            return result;\n        }\n        array2.forEach(o => {\n            if (array1.indexOf(o) > -1) {\n                result.push(o);\n            }\n        });\n        return result;\n    }\n    static withoutProperty(obj, property) {\n        const { [property]: unused, ...rest } = obj;\n        return rest;\n    }\n    static omit(obj, keys) {\n        keys.map((key) => {\n            obj = this.withoutProperty(obj, key);\n        });\n        return obj;\n    }\n    static pick(obj, keys) {\n        const result = {};\n        keys.map((key) => {\n            Object.assign(result, { [key]: this.get(obj, key, null) });\n        });\n        return result;\n    }\n}\n\n/*\n * Public API Surface of shared\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GlobalHelper };\n//# sourceMappingURL=shared.mjs.map\n","map":{"version":3,"file":"shared.mjs","sources":["../../../projects/shared/src/lib/global.helpers.ts","../../../projects/shared/src/public-api.ts","../../../projects/shared/src/shared.ts"],"sourcesContent":["export class GlobalHelper {\n    static isEmptyObject(obj: any): boolean {\n        return !obj || (obj && (Object.keys(obj).length === 0));\n    }\n\n    static isEmpty(obj: any, key: string): boolean {\n        return !obj || (obj && !obj.hasOwnProperty(key));\n    }\n\n    static set(obj: any, path: any, value: any) {\n        if (Object(obj) !== obj) {\n            return obj; // When obj is not an object\n        }\n        // If not yet an array, get the keys from the string-path\n        if (!Array.isArray(path)) {\n            path = path.toString().match(/[^.[\\]]+/g) || [];\n        }\n\n        path.slice(0, -1).reduce((a: any, c: any, i: number) => // Iterate all of them except the last one\n             Object(a[c]) === a[c] // Does the key exist and is its value an object?\n                 // Yes: then follow that path\n                 ? a[c]\n                 // No: create the key. Is the next key a potential array-index?\n                 : a[c] = Math.abs(path[i + 1])>>0 === +path[i + 1]\n                       ? [] // Yes: assign a new array object\n                       : {}, // No: assign a new plain object\n             obj)[path[path.length - 1]] = value; // Finally assign the value to the last key\n        return obj; // Return the top-level object to allow chaining\n    }\n\n    static get(object: any, keys: any, defaultVal?: any): any {\n        if (!object || object === null) { return defaultVal; }\n        keys = Array.isArray(keys) ? keys : keys.split('.');\n        object = object[keys[0]];\n        if (object && keys.length > 1) {\n          return this.get(object, keys.slice(1));\n        }\n\n        return object === undefined ? defaultVal : object;\n    }\n\n    static clone(object: any) {\n        return JSON.parse(JSON.stringify(object));\n      }\n\n    static empty(mixedVar: any): boolean {\n        var undef: any\n        var key: any\n        var i: number\n        var len: number\n        var emptyValues = [undef, null, false, 0, '', '0']\n\n        for (i = 0, len = emptyValues.length; i < len; i++) {\n            if (mixedVar === emptyValues[i]) {\n                return true\n            }\n        }\n\n        if (typeof mixedVar === 'object') {\n            for (key in mixedVar) {\n                if (mixedVar.hasOwnProperty(key)) {\n                    return false\n                }\n            }\n            return true\n        }\n        return false\n    }\n\n    static convertTimestampToDate(ts: number) {\n        const myDate = new Date(ts * 1000);\n        return new Date(Date.UTC(\n            myDate.getFullYear(),\n            myDate.getMonth(),\n            myDate.getDate(),\n            myDate.getHours(),\n            myDate.getMinutes(),\n            myDate.getSeconds()\n        ));\n    }\n\n    static convert2ClientDate(val: any) {\n        return typeof val === 'string' ? val : new Date(val * 1000);\n    }\n\n    static multiDimensionalUnique(arr: string | any, key: string) {\n        var uniques = [];\n        var itemsFound: any = {};\n        for(var i = 0, l = arr.length; i < l; i++) {\n            var stringified = arr[i][key];\n            if (itemsFound[stringified]) { continue; }\n            uniques.push(arr[i]);\n            itemsFound[stringified] = true;\n        }\n        return uniques;\n    }\n\n    static isInObject(value:any, key: string, object: any) {\n        let rs = false;\n        if (!this.empty(object)) {\n            for(let item of object) {\n                if (!this.empty(item[key]) && item[key] == value) {\n                    rs = true;\n                    break;\n                }\n            }\n        }\n        return rs;\n    }\n\n    static arrayPluck(array: any, path: string): any[] {\n        var result: any[] = [];\n    \n        if (!Array.isArray(array)) { return result; }\n        \n        array.forEach(o => {\n            result.push(this.get(o, path));\n        });\n    \n        return result;\n    }\n\n    static intersection(array1: any[], array2: any[]): any[] {\n        var result: any[] = [];\n        if (!Array.isArray(array1) || !Array.isArray(array2)) { return result; }\n        array2.forEach(o => {\n            if (array1.indexOf(o) > -1) {\n                result.push(o);\n            }\n        });\n\n        return result;\n    }\n\n    static withoutProperty(obj: any, property: string) {\n        const { [property]: unused, ...rest } = obj;\n        return rest;\n    }\n\n    static omit(obj: any, keys: any[]) {\n        keys.map((key: string) => {\n            obj = this.withoutProperty(obj, key);\n        });\n        \n        return obj;\n    }\n\n    static pick(obj: any, keys: any[]) {\n        const result = {};\n        keys.map((key: string) => {\n            Object.assign(result, { [key]: this.get(obj, key, null) });\n        });\n\n        return result;\n    }\n}\n","/*\n * Public API Surface of shared\n */\n\nexport * from './lib/global.helpers';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import { __rest } from 'tslib';\n\nclass GlobalHelper {\n    static isEmptyObject(obj) {\n        return !obj || (obj && (Object.keys(obj).length === 0));\n    }\n    static isEmpty(obj, key) {\n        return !obj || (obj && !obj.hasOwnProperty(key));\n    }\n    static set(obj, path, value) {\n        if (Object(obj) !== obj) {\n            return obj; // When obj is not an object\n        }\n        // If not yet an array, get the keys from the string-path\n        if (!Array.isArray(path)) {\n            path = path.toString().match(/[^.[\\]]+/g) || [];\n        }\n        path.slice(0, -1).reduce((a, c, i) => // Iterate all of them except the last one\n         Object(a[c]) === a[c] // Does the key exist and is its value an object?\n            // Yes: then follow that path\n            ? a[c]\n            // No: create the key. Is the next key a potential array-index?\n            : a[c] = Math.abs(path[i + 1]) >> 0 === +path[i + 1]\n                ? [] // Yes: assign a new array object\n                : {}, // No: assign a new plain object\n        obj)[path[path.length - 1]] = value; // Finally assign the value to the last key\n        return obj; // Return the top-level object to allow chaining\n    }\n    static get(object, keys, defaultVal) {\n        if (!object || object === null) {\n            return defaultVal;\n        }\n        keys = Array.isArray(keys) ? keys : keys.split('.');\n        object = object[keys[0]];\n        if (object && keys.length > 1) {\n            return this.get(object, keys.slice(1));\n        }\n        return object === undefined ? defaultVal : object;\n    }\n    static clone(object) {\n        return JSON.parse(JSON.stringify(object));\n    }\n    static empty(mixedVar) {\n        var undef;\n        var key;\n        var i;\n        var len;\n        var emptyValues = [undef, null, false, 0, '', '0'];\n        for (i = 0, len = emptyValues.length; i < len; i++) {\n            if (mixedVar === emptyValues[i]) {\n                return true;\n            }\n        }\n        if (typeof mixedVar === 'object') {\n            for (key in mixedVar) {\n                if (mixedVar.hasOwnProperty(key)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    static convertTimestampToDate(ts) {\n        const myDate = new Date(ts * 1000);\n        return new Date(Date.UTC(myDate.getFullYear(), myDate.getMonth(), myDate.getDate(), myDate.getHours(), myDate.getMinutes(), myDate.getSeconds()));\n    }\n    static convert2ClientDate(val) {\n        return typeof val === 'string' ? val : new Date(val * 1000);\n    }\n    static multiDimensionalUnique(arr, key) {\n        var uniques = [];\n        var itemsFound = {};\n        for (var i = 0, l = arr.length; i < l; i++) {\n            var stringified = arr[i][key];\n            if (itemsFound[stringified]) {\n                continue;\n            }\n            uniques.push(arr[i]);\n            itemsFound[stringified] = true;\n        }\n        return uniques;\n    }\n    static isInObject(value, key, object) {\n        let rs = false;\n        if (!this.empty(object)) {\n            for (let item of object) {\n                if (!this.empty(item[key]) && item[key] == value) {\n                    rs = true;\n                    break;\n                }\n            }\n        }\n        return rs;\n    }\n    static arrayPluck(array, path) {\n        var result = [];\n        if (!Array.isArray(array)) {\n            return result;\n        }\n        array.forEach(o => {\n            result.push(this.get(o, path));\n        });\n        return result;\n    }\n    static intersection(array1, array2) {\n        var result = [];\n        if (!Array.isArray(array1) || !Array.isArray(array2)) {\n            return result;\n        }\n        array2.forEach(o => {\n            if (array1.indexOf(o) > -1) {\n                result.push(o);\n            }\n        });\n        return result;\n    }\n    static withoutProperty(obj, property) {\n        const _a = obj, _b = property, unused = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n        return rest;\n    }\n    static omit(obj, keys) {\n        keys.map((key) => {\n            obj = this.withoutProperty(obj, key);\n        });\n        return obj;\n    }\n    static pick(obj, keys) {\n        const result = {};\n        keys.map((key) => {\n            Object.assign(result, { [key]: this.get(obj, key, null) });\n        });\n        return result;\n    }\n}\n\n/*\n * Public API Surface of shared\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GlobalHelper };\n//# sourceMappingURL=shared.mjs.map\n","map":{"version":3,"file":"shared.mjs","sources":["../../../projects/shared/src/lib/global.helpers.ts","../../../projects/shared/src/public-api.ts","../../../projects/shared/src/shared.ts"],"sourcesContent":["export class GlobalHelper {\n    static isEmptyObject(obj: any): boolean {\n        return !obj || (obj && (Object.keys(obj).length === 0));\n    }\n\n    static isEmpty(obj: any, key: string): boolean {\n        return !obj || (obj && !obj.hasOwnProperty(key));\n    }\n\n    static set(obj: any, path: any, value: any) {\n        if (Object(obj) !== obj) {\n            return obj; // When obj is not an object\n        }\n        // If not yet an array, get the keys from the string-path\n        if (!Array.isArray(path)) {\n            path = path.toString().match(/[^.[\\]]+/g) || [];\n        }\n\n        path.slice(0, -1).reduce((a: any, c: any, i: number) => // Iterate all of them except the last one\n             Object(a[c]) === a[c] // Does the key exist and is its value an object?\n                 // Yes: then follow that path\n                 ? a[c]\n                 // No: create the key. Is the next key a potential array-index?\n                 : a[c] = Math.abs(path[i + 1])>>0 === +path[i + 1]\n                       ? [] // Yes: assign a new array object\n                       : {}, // No: assign a new plain object\n             obj)[path[path.length - 1]] = value; // Finally assign the value to the last key\n        return obj; // Return the top-level object to allow chaining\n    }\n\n    static get(object: any, keys: any, defaultVal?: any): any {\n        if (!object || object === null) { return defaultVal; }\n        keys = Array.isArray(keys) ? keys : keys.split('.');\n        object = object[keys[0]];\n        if (object && keys.length > 1) {\n          return this.get(object, keys.slice(1));\n        }\n\n        return object === undefined ? defaultVal : object;\n    }\n\n    static clone(object: any) {\n        return JSON.parse(JSON.stringify(object));\n      }\n\n    static empty(mixedVar: any): boolean {\n        var undef: any\n        var key: any\n        var i: number\n        var len: number\n        var emptyValues = [undef, null, false, 0, '', '0']\n\n        for (i = 0, len = emptyValues.length; i < len; i++) {\n            if (mixedVar === emptyValues[i]) {\n                return true\n            }\n        }\n\n        if (typeof mixedVar === 'object') {\n            for (key in mixedVar) {\n                if (mixedVar.hasOwnProperty(key)) {\n                    return false\n                }\n            }\n            return true\n        }\n        return false\n    }\n\n    static convertTimestampToDate(ts: number) {\n        const myDate = new Date(ts * 1000);\n        return new Date(Date.UTC(\n            myDate.getFullYear(),\n            myDate.getMonth(),\n            myDate.getDate(),\n            myDate.getHours(),\n            myDate.getMinutes(),\n            myDate.getSeconds()\n        ));\n    }\n\n    static convert2ClientDate(val: any) {\n        return typeof val === 'string' ? val : new Date(val * 1000);\n    }\n\n    static multiDimensionalUnique(arr: string | any, key: string) {\n        var uniques = [];\n        var itemsFound: any = {};\n        for(var i = 0, l = arr.length; i < l; i++) {\n            var stringified = arr[i][key];\n            if (itemsFound[stringified]) { continue; }\n            uniques.push(arr[i]);\n            itemsFound[stringified] = true;\n        }\n        return uniques;\n    }\n\n    static isInObject(value:any, key: string, object: any) {\n        let rs = false;\n        if (!this.empty(object)) {\n            for(let item of object) {\n                if (!this.empty(item[key]) && item[key] == value) {\n                    rs = true;\n                    break;\n                }\n            }\n        }\n        return rs;\n    }\n\n    static arrayPluck(array: any, path: string): any[] {\n        var result: any[] = [];\n    \n        if (!Array.isArray(array)) { return result; }\n        \n        array.forEach(o => {\n            result.push(this.get(o, path));\n        });\n    \n        return result;\n    }\n\n    static intersection(array1: any[], array2: any[]): any[] {\n        var result: any[] = [];\n        if (!Array.isArray(array1) || !Array.isArray(array2)) { return result; }\n        array2.forEach(o => {\n            if (array1.indexOf(o) > -1) {\n                result.push(o);\n            }\n        });\n\n        return result;\n    }\n\n    static withoutProperty(obj: any, property: string) {\n        const { [property]: unused, ...rest } = obj;\n        return rest;\n    }\n\n    static omit(obj: any, keys: any[]) {\n        keys.map((key: string) => {\n            obj = this.withoutProperty(obj, key);\n        });\n        \n        return obj;\n    }\n\n    static pick(obj: any, keys: any[]) {\n        const result = {};\n        keys.map((key: string) => {\n            Object.assign(result, { [key]: this.get(obj, key, null) });\n        });\n\n        return result;\n    }\n}\n","/*\n * Public API Surface of shared\n */\n\nexport * from './lib/global.helpers';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;MAAa,YAAY,CAAA;IACrB,OAAO,aAAa,CAAC,GAAQ,EAAA;AACzB,QAAA,OAAO,CAAC,GAAG,KAAK,GAAG,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3D;AAED,IAAA,OAAO,OAAO,CAAC,GAAQ,EAAE,GAAW,EAAA;AAChC,QAAA,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;KACpD;AAED,IAAA,OAAO,GAAG,CAAC,GAAQ,EAAE,IAAS,EAAE,KAAU,EAAA;AACtC,QAAA,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;YACrB,OAAO,GAAG,CAAC;AACd,SAAA;;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtB,YAAA,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACnD,SAAA;QAED,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,CAAS;AAC9C,SAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEjB,cAAE,CAAC,CAAC,CAAC,CAAC;;cAEJ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;kBAC1C,EAAE;kBACF,EAAE;AACd,QAAA,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACzC,OAAO,GAAG,CAAC;KACd;AAED,IAAA,OAAO,GAAG,CAAC,MAAW,EAAE,IAAS,EAAE,UAAgB,EAAA;AAC/C,QAAA,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,EAAE;AAAE,YAAA,OAAO,UAAU,CAAC;AAAE,SAAA;QACtD,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,QAAA,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,SAAA;QAED,OAAO,MAAM,KAAK,SAAS,GAAG,UAAU,GAAG,MAAM,CAAC;KACrD;IAED,OAAO,KAAK,CAAC,MAAW,EAAA;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3C;IAEH,OAAO,KAAK,CAAC,QAAa,EAAA;AACtB,QAAA,IAAI,KAAU,CAAA;AACd,QAAA,IAAI,GAAQ,CAAA;AACZ,QAAA,IAAI,CAAS,CAAA;AACb,QAAA,IAAI,GAAW,CAAA;AACf,QAAA,IAAI,WAAW,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAA;AAElD,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChD,YAAA,IAAI,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,EAAE;AAC7B,gBAAA,OAAO,IAAI,CAAA;AACd,aAAA;AACJ,SAAA;AAED,QAAA,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,KAAK,GAAG,IAAI,QAAQ,EAAE;AAClB,gBAAA,IAAI,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC9B,oBAAA,OAAO,KAAK,CAAA;AACf,iBAAA;AACJ,aAAA;AACD,YAAA,OAAO,IAAI,CAAA;AACd,SAAA;AACD,QAAA,OAAO,KAAK,CAAA;KACf;IAED,OAAO,sBAAsB,CAAC,EAAU,EAAA;QACpC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;AACnC,QAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CACpB,MAAM,CAAC,WAAW,EAAE,EACpB,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,OAAO,EAAE,EAChB,MAAM,CAAC,QAAQ,EAAE,EACjB,MAAM,CAAC,UAAU,EAAE,EACnB,MAAM,CAAC,UAAU,EAAE,CACtB,CAAC,CAAC;KACN;IAED,OAAO,kBAAkB,CAAC,GAAQ,EAAA;AAC9B,QAAA,OAAO,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;KAC/D;AAED,IAAA,OAAO,sBAAsB,CAAC,GAAiB,EAAE,GAAW,EAAA;QACxD,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,UAAU,GAAQ,EAAE,CAAC;AACzB,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9B,YAAA,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;gBAAE,SAAS;AAAE,aAAA;YAC1C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,YAAA,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;AAClC,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAClB;AAED,IAAA,OAAO,UAAU,CAAC,KAAS,EAAE,GAAW,EAAE,MAAW,EAAA;QACjD,IAAI,EAAE,GAAG,KAAK,CAAC;AACf,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACrB,YAAA,KAAI,IAAI,IAAI,IAAI,MAAM,EAAE;AACpB,gBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE;oBAC9C,EAAE,GAAG,IAAI,CAAC;oBACV,MAAM;AACT,iBAAA;AACJ,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,EAAE,CAAC;KACb;AAED,IAAA,OAAO,UAAU,CAAC,KAAU,EAAE,IAAY,EAAA;QACtC,IAAI,MAAM,GAAU,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,MAAM,CAAC;AAAE,SAAA;AAE7C,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAG;AACd,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnC,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,CAAC;KACjB;AAED,IAAA,OAAO,YAAY,CAAC,MAAa,EAAE,MAAa,EAAA;QAC5C,IAAI,MAAM,GAAU,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,OAAO,MAAM,CAAC;AAAE,SAAA;AACxE,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;YACf,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AACxB,gBAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,aAAA;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,CAAC;KACjB;AAED,IAAA,OAAO,eAAe,CAAC,GAAQ,EAAE,QAAgB,EAAA;AAC7C,QAAA,MAAwC,EAAA,GAAA,GAAG,EAAnC,EAAA,GAAC,QAAS,EAAE,MAAM,GAAA,EAAA,CAAA,EAAA,CAAA,EAAK,IAAI,GAA7B,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,KAAA,QAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAA+B,CAAM,CAAC;AAC5C,QAAA,OAAO,IAAI,CAAC;KACf;AAED,IAAA,OAAO,IAAI,CAAC,GAAQ,EAAE,IAAW,EAAA;AAC7B,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAW,KAAI;YACrB,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzC,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,GAAG,CAAC;KACd;AAED,IAAA,OAAO,IAAI,CAAC,GAAQ,EAAE,IAAW,EAAA;QAC7B,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAW,KAAI;YACrB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/D,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,CAAC;KACjB;AACJ;;AC3JD;;AAEG;;ACFH;;AAEG;;;;"}}}